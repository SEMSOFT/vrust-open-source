{
  "id": "VRust",
  "user": "O2Lab VRust Team",
  "crate": "bridge",
  "git-loc": "https://github.com/parasol-aser/vrust",
  "timestamp": "1645200514",
  "int_cnt": 0,
  "chk_cnt": 0,
  "typ_cnt": 0,
  "oth_cnt": 18,
  "errors": [
    {
      "type": "InstructionId",
      "id": "TYP_CVE_0",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::Initialize::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::initialize::initialize(){// program/src/api/initialize.rs:55:1: 98:2 }\n\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\n\t\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\nfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_1",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::PostMessage::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::post_message::post_message(){// program/src/api/post_message.rs:75:1: 146:2 }\n\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\n\t\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\nfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_2",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::PostMessage::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::post_message::post_message(){// program/src/api/post_message.rs:75:1: 146:2 }\n\t\t\t\t\tfn solana_program::program::invoke(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:7:1: 9:2 }\n\t\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\nfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_3",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs",
      "code": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:192:5: 236:6 \n\tfn peel<I>(ctx: &'c mut Context<'a, 'b, 'c, I>) -> Result<Self> {\n        if ctx.immutable && ctx.info().is_writable {\n            return Err(\n                SolitaireError::InvalidMutability(*ctx.info().key, ctx.info().is_writable).into(),\n            );\n        }\n\n        // If we're initializing the type, we should emit system/rent as deps.\n        let (initialized, data): (bool, T) = match IsInitialized {\n            AccountState::Uninitialized => {\n                if **ctx.info().lamports.borrow() != 0 {\n                    return Err(SolitaireError::AlreadyInitialized(*ctx.info().key));\n                }\n                (false, T::default())\n            }\n            AccountState::Initialized => {\n                (true, T::try_from_slice(&mut *ctx.info().data.borrow_mut())?)\n            }\n            AccountState::MaybeInitialized => {\n                if **ctx.info().lamports.borrow() == 0 {\n                    (false, T::default())\n                } else {\n                    (true, T::try_from_slice(&mut *ctx.info().data.borrow_mut())?)\n                }\n            }\n        };\n\n        if initialized {\n            match data.owner() {\n                AccountOwner::This => {\n                    if ctx.info().owner != ctx.this {\n                        return Err(SolitaireError::InvalidOwner(*ctx.info().owner));\n                    }\n                }\n                AccountOwner::Other(v) => {\n                    if *ctx.info().owner != v {\n                        return Err(SolitaireError::InvalidOwner(*ctx.info().owner));\n                    }\n                }\n                AccountOwner::Any => {}\n            };\n        }\n\n        Ok(Data(Box::new(ctx.info().clone()), data))\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::PostVAA::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn <api::post_vaa::PostVAA<'b> as solitaire::FromAccounts<'a, 'b, 'c>>::from(){// program/src/api/post_vaa.rs:54:10: 54:22 }\n\t\t\t\t\tfn <solitaire::Data<'b, T, IsInitialized> as solitaire::Peel<'a, 'b, 'c>>::peel(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:192:5: 236:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_4",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::PostVAA::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::post_vaa::post_vaa(){// program/src/api/post_vaa.rs:104:1: 156:2 }\n\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\n\t\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\nfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_5",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs",
      "code": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:246:5: 260:6 \n\tfn persist(&self, program_id: &Pubkey) -> Result<()> {\n        // TODO: Introduce Mut<> to solve the check we really want to make here.\n        if self.0.owner != program_id {\n            return Ok(());\n        }\n\n        // It is also a malformed program to attempt to write to a non-writeable account.\n        if !self.0.is_writable {\n            return Ok(());\n        }\n\n        self.1.serialize(&mut *self.0.data.borrow_mut())?;\n\n        Ok(())\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::PostVAA::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn <api::post_vaa::PostVAA<'b> as solitaire::Persist>::persist(){// program/src/api/post_vaa.rs:54:10: 54:22 }\n\t\t\t\t\tfn <solitaire::Data<'b, T, IsInitialized> as solitaire::Peel<'a, 'b, 'c>>::persist(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:246:5: 260:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_6",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs",
      "code": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:192:5: 236:6 \n\tfn peel<I>(ctx: &'c mut Context<'a, 'b, 'c, I>) -> Result<Self> {\n        if ctx.immutable && ctx.info().is_writable {\n            return Err(\n                SolitaireError::InvalidMutability(*ctx.info().key, ctx.info().is_writable).into(),\n            );\n        }\n\n        // If we're initializing the type, we should emit system/rent as deps.\n        let (initialized, data): (bool, T) = match IsInitialized {\n            AccountState::Uninitialized => {\n                if **ctx.info().lamports.borrow() != 0 {\n                    return Err(SolitaireError::AlreadyInitialized(*ctx.info().key));\n                }\n                (false, T::default())\n            }\n            AccountState::Initialized => {\n                (true, T::try_from_slice(&mut *ctx.info().data.borrow_mut())?)\n            }\n            AccountState::MaybeInitialized => {\n                if **ctx.info().lamports.borrow() == 0 {\n                    (false, T::default())\n                } else {\n                    (true, T::try_from_slice(&mut *ctx.info().data.borrow_mut())?)\n                }\n            }\n        };\n\n        if initialized {\n            match data.owner() {\n                AccountOwner::This => {\n                    if ctx.info().owner != ctx.this {\n                        return Err(SolitaireError::InvalidOwner(*ctx.info().owner));\n                    }\n                }\n                AccountOwner::Other(v) => {\n                    if *ctx.info().owner != v {\n                        return Err(SolitaireError::InvalidOwner(*ctx.info().owner));\n                    }\n                }\n                AccountOwner::Any => {}\n            };\n        }\n\n        Ok(Data(Box::new(ctx.info().clone()), data))\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::SetFees::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn <api::governance::SetFees<'b> as solitaire::FromAccounts<'a, 'b, 'c>>::from(){// program/src/api/governance.rs:204:10: 204:22 }\n\t\t\t\t\tfn <vaa::ClaimableVAA<'b, T> as solitaire::Peel<'a, 'b, 'c>>::peel(){// program/src/vaa.rs:148:10: 148:22 }\n\t\t\t\t\t\tfn <vaa::ClaimableVAA<'b, T> as solitaire::FromAccounts<'a, 'b, 'c>>::from(){// program/src/vaa.rs:148:10: 148:22 }\nfn <vaa::PayloadMessage<'b, T> as solitaire::Peel<'a, 'b, 'c>>::peel(){// program/src/vaa.rs:116:5: 124:6 }\n\tfn <solitaire::Data<'b, T, IsInitialized> as solitaire::Peel<'a, 'b, 'c>>::peel(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:192:5: 236:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_7",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::SetFees::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::set_fees(){// program/src/api/governance.rs:222:1: 229:2 }\n\t\t\t\t\tfn vaa::ClaimableVAA::<'b, T>::claim(){// program/src/vaa.rs:187:5: 206:6 }\n\t\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\nfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\n\tfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_8",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs",
      "code": "/home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:246:5: 260:6 \n\tfn persist(&self, program_id: &Pubkey) -> Result<()> {\n        // TODO: Introduce Mut<> to solve the check we really want to make here.\n        if self.0.owner != program_id {\n            return Ok(());\n        }\n\n        // It is also a malformed program to attempt to write to a non-writeable account.\n        if !self.0.is_writable {\n            return Ok(());\n        }\n\n        self.1.serialize(&mut *self.0.data.borrow_mut())?;\n\n        Ok(())\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::SetFees::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn <api::governance::SetFees<'b> as solitaire::Persist>::persist(){// program/src/api/governance.rs:204:10: 204:22 }\n\t\t\t\t\tfn <vaa::ClaimableVAA<'b, T> as solitaire::Peel<'a, 'b, 'c>>::persist(){// program/src/vaa.rs:148:10: 148:22 }\n\t\t\t\t\t\tfn <vaa::ClaimableVAA<'b, T> as solitaire::Persist>::persist(){// program/src/vaa.rs:148:10: 148:22 }\nfn <vaa::PayloadMessage<'b, T> as solitaire::Peel<'a, 'b, 'c>>::persist(){// program/src/vaa.rs:130:5: 132:6 }\n\tfn <solitaire::Data<'b, T, IsInitialized> as solitaire::Peel<'a, 'b, 'c>>::persist(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/peel.rs:246:5: 260:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_9",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:77:5: 79:6 \n\tpub fn data_len(&self) -> usize {\n        self.data.borrow().len()\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::TransferFees::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::transfer_fees(){// program/src/api/governance.rs:258:1: 295:2 }\n\t\t\t\t\tfn solana_program::account_info::AccountInfo::<'a>::data_len(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:77:5: 79:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_10",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::TransferFees::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::transfer_fees(){// program/src/api/governance.rs:258:1: 295:2 }\n\t\t\t\t\tfn vaa::ClaimableVAA::<'b, T>::claim(){// program/src/vaa.rs:187:5: 206:6 }\n\t\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\nfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\n\tfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_11",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::TransferFees::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::transfer_fees(){// program/src/api/governance.rs:258:1: 295:2 }\n\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\n\t\t\t\t\t\tfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_12",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::UpgradeContract::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::upgrade_contract(){// program/src/api/governance.rs:96:1: 120:2 }\n\t\t\t\t\tfn vaa::ClaimableVAA::<'b, T>::claim(){// program/src/vaa.rs:187:5: 206:6 }\n\t\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\nfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\n\tfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_13",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::UpgradeContract::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::upgrade_contract(){// program/src/api/governance.rs:96:1: 120:2 }\n\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\n\t\t\t\t\t\tfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_14",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::UpgradeGuardianSet::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::upgrade_guardian_set(){// program/src/api/governance.rs:146:1: 202:2 }\n\t\t\t\t\tfn vaa::ClaimableVAA::<'b, T>::claim(){// program/src/vaa.rs:187:5: 206:6 }\n\t\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\nfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\n\tfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_15",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::UpgradeGuardianSet::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::governance::upgrade_guardian_set(){// program/src/api/governance.rs:146:1: 202:2 }\n\t\t\t\t\tfn <T as solitaire::Creatable<'a, K>>::create(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/processors/seeded.rs:128:5: 150:6 }\n\t\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\nfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_16",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::VerifySignatures::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::verify_signature::verify_signatures(){// program/src/api/verify_signature.rs:68:1: 223:2 }\n\t\t\t\t\tfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    },
    {
      "type": "InstructionId",
      "id": "TYP_CVE_17",
      "title": "Instruction id not checked error",
      "category": "Instruction id issue",
      "severity": "Critical",
      "location": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs",
      "code": "/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 \n\tpub fn try_borrow_mut_data(&self) -> Result<RefMut<&'a mut [u8]>, ProgramError> {\n        self.data\n            .try_borrow_mut()\n            .map_err(|_| ProgramError::AccountBorrowFailed)\n    }",
      "callstack": "fn entrypoint(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/entrypoint.rs:46:9: 53:10 }\n\tfn instruction::solitaire(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:101:13: 108:14 }\n\t\tfn instruction::dispatch(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:89:13: 99:14 }\n\t\t\tfn instruction::VerifySignatures::execute(){// /home/ubuntu/VRust/vrust/wormhole/solana/solitaire/program/src/macros.rs:68:21: 74:22 }\n\t\t\t\tfn api::verify_signature::verify_signatures(){// program/src/api/verify_signature.rs:68:1: 223:2 }\n\t\t\t\t\tfn solana_program::program::invoke(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:7:1: 9:2 }\n\t\t\t\t\t\tfn solana_program::program::invoke_signed(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/program.rs:15:1: 55:2 }\nfn solana_program::account_info::AccountInfo::<'a>::try_borrow_mut_data(){// /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.7.0/src/account_info.rs:111:5: 115:6 }\n",
      "status": "UnResolved",
      "description": "message",
      "link": "GitHub Link to be added.",
      "alleviation": "Description of the bug here."
    }
  ]
}