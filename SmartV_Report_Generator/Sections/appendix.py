


def genAppendix():


    res = "\n\n# Appendix  \n"

    res += "\n\nCopied from https://leaderboard.certik.io/projects/aave\n\n"

    res += "## Finding Categories\n"

    res += "### Gas Optimization\n"

    res += "\nGas Optimization findings do not affect the functionality of the code but generate different, more optimal EVM opcodes resulting in a reduction on the total gas cost of a transaction.\n\n"

    res += "### Mathematical Operations\n"

    res += "Mathematical Operation findings relate to mishandling of math formulas, such as overflows, incorrect operations etc."

    res += "\n\n### Logical Issue\n"

    res += "Logical Issue findings detail a fault in the logic of the linked code, such as an incorrect notion on how block.timestamp works.\n\n"

    res += "### Language Specific\n"

    res += "Language Specific findings are issues that would only arise within Solidity, i.e. incorrect usage of private or delete.\n\n"

    res += "### Coding Style\n"

    res += "Coding Style findings usually do not affect the generated byte-code but rather comment on how to make the codebase more legible and, as a result, easily maintainable.\n\n"

    res += "## Checksum Calculation Method\n"
    res += 'The "Checksum" field in the "Audit Scope" section is calculated as the SHA-256 (Secure Hash Algorithm 2 with digest size of 256 bits) digest of the content of each file hosted in the listed source repository under the specified commit. \n\nThe result is hexadecimal encoded and is the same as the output of the Linux "sha256sum" command against the target file.'

    return res



